description = "ontrack Web"

apply plugin: "war"

// See https://github.com/bmuschko/gradle-tomcat-plugin
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
    }
}
apply plugin: 'tomcat'

// Tomcat version
def tomcatVersion = '7.0.47'

dependencies {
	compile project(':ontrack-service')
	compile project(':ontrack-web-support')
	compile project(':ontrack-extension-api')
	compile libraries['freemarker']
	compile libraries['commons-upload']
	compile springLibraries['context-support']
	compile springLibraries['hateoas']
	compile springSecurityLibraries['config']
	compile springSecurityLibraries['web']
	
	// Provided
	providedCompile libraries['servlet-api']
	
	// Tomcat libraries
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
		   "org.apache.tomcat:tomcat-dbcp:${tomcatVersion}",
		   libraries['java-mail'],
           libraries['h2']
	
	// Runtime
	runtime project(':ontrack-backend')
	runtime loggingLibraries
	// All extensions
	file('../ontrack-extension').eachDir { File dir ->
		if (dir.name != "build") {
			runtime project(":ontrack-extension:$dir.name")
		}
	}
	
	// Test
	testCompile springLibraries['test']
}

tomcatRun {
	doFirst {
		System.setProperty('spring.profiles.active', 'dev')
	}
	contextPath = '/ontrack'
	configFile = file('src/test/resources/tomcat/context-local.xml')
}
